{"ms":1759714541944,"ts":"2025-10-06T01:35:41.944Z","content":"import React, { useEffect, useState } from \"react\";\n\n// Task:\n// 1. Listen for \"analytics:event\" messages sent via window.postMessage.\n// 2. Only accept messages with { type: \"analytics:event\", name: string, ts: number }.\n// 3. Display each valid event name in a list.\n// 4. Clean up listeners on unmount.\n// 5. (Bonus) Simulate sending an event when clicking a button.\n\nexport default function App() {\n    const [events, setEvents] = useState<string[]>([]);\n\n    // your code here\n\n    return (\n        <div style={{ padding: 20 }}>\n            <h2>Analytics Event Receiver</h2>\n            {/* add button and list here */}\n        </div>\n    );\n}","initial_code":true,"tag":"baseline_at_session_start"}
{"ms":1759715002547,"ts":"2025-10-06T01:43:22.547Z","content":"import React, { useEffect, useState } from \"react\";\n\n// Task:\n// 1. Listen for \"analytics:event\" messages sent via window.postMessage.\n// 2. Only accept messages with { type: \"analytics:event\", name: string, ts: number }.\n// 3. Display each valid event name in a list.\n// 4. Clean up listeners on unmount.\n// 5. (Bonus) Simulate sending an event when clicking a button.\n\nexport default function App() {\n    const [events, setEvents] = useState<string[]>([]);\n\n    useEffect(() => {\n        const handleEvent = (event: MessageEvent) => {\n            if (event.data.type === \"analytics:event\" && typeof event.data.name === \"string\" && typeof event.data.ts === \"number\") {\n                setEvents(prevEvents => [...prevEvents, event.data.name]);\n            }\n        };\n\n        window.addEventListener(\"message\", handleEvent);\n\n        return () => {\n            window.removeEventListener(\"message\", handleEvent);\n        };\n    }, []);\n\n    const sendTestEvent = () => {\n        window.postMessage({ type: \"analytics:event\", name: \"Test Event\", ts: Date.now() }, \"*\");\n    };\n\n    return (\n        <div style={{ padding: 20 }}>\n            <h2>Analytics Event Receiver</h2>\n            <button onClick={sendTestEvent}>Send Test Event</button>\n            <ul>\n                {events.map((event, index) => (\n                    <li key={index}>{event}</li>\n                ))}\n            </ul>\n        </div>\n    );\n}"}

