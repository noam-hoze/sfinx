generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model JD {
  id        String   @id @default(uuid())
  title     String
  summary   String
  tags      String[]

  tasks     Task[]
  createdAt DateTime @default(now())
}

model Task {
  id               String   @id @default(uuid())
  jdId             String
  jd               JD       @relation(fields: [jdId], references: [id], onDelete: Cascade)
  title            String
  prompt           String
  hiddenTestsJson  Json
  createdAt        DateTime @default(now())

  sessions         Session[]
}

model Session {
  id          String   @id @default(uuid())
  userId      String
  taskId      String
  task        Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  codeBlob    String
  audioUrl    String?
  transcript  String?
  metricsJson Json?
  vectorJson  Json?
  createdAt   DateTime @default(now())

  score       Score?
  panelLabel  PanelLabel?
}

model TpeProfile {
  id         String   @id @default(uuid())
  name       String   @unique
  traitsJson Json
  vectorJson Json
  createdAt  DateTime @default(now())
}

model Score {
  id           String   @id @default(uuid())
  sessionId    String   @unique
  session      Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  similarity   Float
  perTraitJson Json
}

enum PanelDecisionLabel {
  SIMILAR
  NOT
  UNCERTAIN
}

model PanelLabel {
  id        String              @id @default(uuid())
  sessionId String              @unique
  session   Session             @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  label     PanelDecisionLabel
}


